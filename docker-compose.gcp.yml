version: '3.8'

services:
  # Aplicaci√≥n principal
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Base de datos (Cloud SQL)
      - DATABASE_URL=postgresql://mariachi_user:${DB_PASSWORD}@${DB_IP}:5432/mariachi_fidelizacion
      
      # Redis (Cloud Memorystore)
      - REDIS_URL=redis://${REDIS_IP}:6379/0
      
      # JWT
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      
      # APIs Externas
      - INSTAGRAM_CLIENT_ID=${INSTAGRAM_CLIENT_ID}
      - INSTAGRAM_CLIENT_SECRET=${INSTAGRAM_CLIENT_SECRET}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      
      # Odoo (en la misma red GCP)
      - ODOO_URL=http://${ODOO_IP}:8069
      - ODOO_DATABASE=${ODOO_DATABASE}
      - ODOO_USERNAME=${ODOO_USERNAME}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      
      # Email
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      
      # CORS
      - CORS_ORIGINS=${CORS_ORIGINS}
      
      # Debug
      - DEBUG=false
      - LOG_LEVEL=info
      
      # GCP Storage
      - GCP_BUCKET_NAME=${GCP_BUCKET_NAME}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
    volumes:
      - ./reports:/app/reports
      - ./exports:/app/exports
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Worker de Celery
  celery-worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://mariachi_user:${DB_PASSWORD}@${DB_IP}:5432/mariachi_fidelizacion
      - REDIS_URL=redis://${REDIS_IP}:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - DEBUG=false
      - LOG_LEVEL=info
      - ODOO_URL=http://${ODOO_IP}:8069
      - ODOO_DATABASE=${ODOO_DATABASE}
      - ODOO_USERNAME=${ODOO_USERNAME}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
    volumes:
      - ./reports:/app/reports
      - ./exports:/app/exports
      - ./logs:/app/logs
    restart: unless-stopped
    command: celery -A app.celery worker --loglevel=info --concurrency=2

  # Beat de Celery para tareas programadas
  celery-beat:
    build: .
    environment:
      - DATABASE_URL=postgresql://mariachi_user:${DB_PASSWORD}@${DB_IP}:5432/mariachi_fidelizacion
      - REDIS_URL=redis://${REDIS_IP}:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - DEBUG=false
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    command: celery -A app.celery beat --loglevel=info

  # Flower para monitoreo de Celery
  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://mariachi_user:${DB_PASSWORD}@${DB_IP}:5432/mariachi_fidelizacion
      - REDIS_URL=redis://${REDIS_IP}:6379/0
      - SECRET_KEY=${SECRET_KEY}
    restart: unless-stopped
    command: celery -A app.celery flower --port=5555

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
